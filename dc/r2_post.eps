%!PS-Adobe-2.0 EPSF-2.0
%%Title: post.fig
%%Creator: fig2dev Version 3.1 Patchlevel 2
%%CreationDate: Wed Jun 17 16:45:16 1998
%%For: baraue@sarah.fiu.edu (Red Hat Linux User,,,,)
%Magnification: 0.36
%%Orientation: Portrait
%%BoundingBox: 0 0 251 89
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-37.0 126.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<808080804040404020202020101010100808080804040404
	020202020101010180808080404040402020202010101010
	080808080404040402020202010101018080808040404040
	202020201010101008080808040404040202020201010101
	808080804040404020202020101010100808080804040404
	0202020201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.02160 0.02160 sc
7.500 slw
% Polyline
n 4801 4306 m 4876 4231 l 4951 4306 l 5026 4231 l 5101 4306 l 5176 4231 l
 5251 4306 l 5326 4231 l 5401 4306 l 5476 4231 l 5551 4306 l
 5626 4231 l 5701 4306 l 5776 4231 l 5851 4306 l 5926 4231 l
 6001 4306 l 6076 4231 l 6151 4306 l 6226 4231 l 6301 4306 l
 6376 4231 l 6451 4306 l 6526 4231 l 6601 4306 l gs col-1 s gr 
% Polyline
n 4801 4831 m 4876 4756 l 4951 4831 l 5026 4756 l 5101 4831 l 5176 4756 l
 5251 4831 l 5326 4756 l 5401 4831 l 5476 4756 l 5551 4831 l
 5626 4756 l 5701 4831 l 5776 4756 l 5851 4831 l 5926 4756 l
 6001 4831 l 6076 4756 l 6151 4831 l 6226 4756 l 6301 4831 l
 6376 4756 l 6451 4831 l 6526 4756 l 6601 4831 l gs col-1 s gr 
% Polyline
n 4801 4306 m 4801 4831 l gs col-1 s gr 
% Polyline
n 6601 4306 m 6601 4831 l gs col-1 s gr 
% Polyline
n 4351 4307 m 4276 4382 l 4276 4307 l 4201 4382 l 4201 4307 l 4126 4382 l
 4126 4307 l 4051 4382 l 4051 4307 l 3976 4382 l 3976 4307 l
 3901 4382 l 3901 4307 l 3826 4382 l 3826 4307 l 3751 4382 l gs col-1 s gr 
% Polyline
n 3751 4382 m 3751 4757 l gs col-1 s gr 
% Polyline
n 4351 4682 m 4276 4757 l 4276 4682 l 4201 4757 l 4201 4682 l 4126 4757 l
 4126 4682 l 4051 4757 l 4051 4682 l 3976 4757 l 3976 4682 l
 3901 4757 l 3901 4682 l 3826 4757 l 3826 4682 l 3751 4757 l gs col-1 s gr 
% Polyline
n 6750 4195 m 9075 4195 l 9150 4270 l 9150 4795 l 9075 4870 l 6750 4870 l
 cp gs col-1 s gr 
% Polyline
n 6750 4270 m 6600 4270 l 6600 4795 l 6750 4795 l cp gs col-1 s gr 
% Polyline
n 4350 4307 m 4800 4307 l 4800 4757 l 4350 4757 l cp gs col-1 s gr 
% Polyline
n 3750 4082 m 3300 4082 l 3300 4157 l 3300 4157 l 1725 4157 l 1725 4907 l
 3300 4907 l 3300 4982 l 3750 4982 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 115.00 272.13] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 7602 3933 m 8052 4158 l 8202 4308 l 8277 4458 l 9702 4458 l 9702 4608 l
 8277 4608 l 8352 4833 l 8352 5133 l 13302 5133 l 13077 4683 l
 13227 4533 l 13002 4083 l 13152 3933 l cp gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 8563 5425 m 8938 5425 l 8938 5650 l 8563 5650 l cp gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 8833 5435 m 8833 5653 l gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 8653 5435 m 8653 5653 l gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 8563 3400 m 8938 3400 l 8938 3625 l 8563 3625 l cp gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 8833 3410 m 8833 3628 l gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 8653 3410 m 8653 3628 l gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 8526 3625 m 8976 3625 l 8976 5425 l 8526 5425 l cp gs col7 1.00 shd ef gr gs col-1 s gr 
30.000 slw
% Polyline
n 8526 4525 m 8976 4525 l gs col7 1.00 shd ef gr gs col-1 s gr 
7.500 slw
% Polyline
n 8616 5660 m 8638 5683 l 8623 5728 l 8638 5773 l 8616 5803 l 8878 5803 l
 8863 5758 l 8893 5728 l 8856 5705 l 8893 5660 l gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 6300 4050 m 5850 4050 l 5850 5025 l 6300 5025 l cp gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 5850 4350 m 6300 4350 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 390.00 290.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 5850 4725 m 6300 4725 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 390.00 315.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 5824 4050 m 5374 4050 l 5374 5025 l 5824 5025 l cp gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 5374 4350 m 5824 4350 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 358.27 290.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 5374 4725 m 5824 4725 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 358.27 315.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Ellipse
n 2250 4539 300 300 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col-1 s gr

% Polyline
n 2250 4237 m 2100 4272 l 2100 3975 l 2400 3975 l 2400 4275 l cp gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 1950 3825 m 2550 3825 l 2550 3975 l 1950 3975 l cp gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 2025 3825 m 2475 3825 l 2475 2700 l 2025 2700 l cp gs col7 1.00 shd ef gr gs col-1 s gr 
% Polyline
n 7593 3933 m 6373 3933 l 6375 4200 l 8093 4198 l 8048 4153 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 424.87 262.20] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 8353 4868 m 6375 4875 l 6373 5128 l 8353 5128 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 424.87 324.53] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 6373 4203 m 6378 4243 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 424.87 280.20] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 6378 4768 m 6373 4873 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 424.87 317.87] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 6385 3910 m 6310 3910 l 6310 5193 l 6385 5193 l cp gs col7 1.00 shd ef gr gs col-1 s gr 
15.000 slw
% Polyline
gs  clippath
2415 2449 m 2270 2649 l 2303 2405 l 2183 2706 l 2295 2750 l  cp clip
n 2700 1950 m 2550 1950 l 2250 2700 l gs col-1 s gr gr

% arrowhead
n 2415 2449 m 2270 2649 l 2303 2405 l 2359 2427 l 2415 2449 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
2470 4296 m 2281 4456 l 2372 4226 l 2184 4490 l 2281 4559 l  cp clip
n 3000 3450 m 2250 4500 l gs col-1 s gr gr

% arrowhead
n 2470 4296 m 2281 4456 l 2372 4226 l 2421 4261 l 2470 4296 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
6153 3760 m 6078 3996 l 6033 3753 l 6013 4076 l 6133 4084 l  cp clip
n 6300 2850 m 6150 2850 l 6075 4050 l gs col-1 s gr gr

% arrowhead
n 6153 3760 m 6078 3996 l 6033 3753 l 6093 3757 l 6153 3760 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
n 9450 3450 m 9450 3450 l gs col-1 s gr
% Polyline
gs  clippath
9112 3754 m 8890 3864 l 9034 3663 l 8788 3874 l 8866 3965 l  cp clip
n 9375 3450 m 8850 3900 l gs col-1 s gr gr

% arrowhead
n 9112 3754 m 8890 3864 l 9034 3663 l 9073 3709 l 9112 3754 l  cp gs 0.00 setgray ef gr  col-1 s
7.500 slw
% Polyline
n 4803 4318 m 4873 4748 l gs col-1 s gr 
% Polyline
n 4958 4318 m 5028 4763 l gs col-1 s gr 
% Polyline
n 5108 4313 m 5178 4758 l gs col-1 s gr 
% Polyline
n 5258 4313 m 5328 4753 l gs col-1 s gr 
% Polyline
n 5553 4318 m 5553 4318 l gs col-1 s gr
% Polyline
n 6453 4318 m 6603 4838 l gs col-1 s gr 
% Polyline
n 6453 4828 m 6383 4573 l gs col-1 s gr 
15.000 slw
% Polyline
gs  clippath
5796 3789 m 5643 3983 l 5686 3740 l 5554 4036 l 5664 4085 l  cp clip
n 6150 2850 m 5621 4033 l gs col-1 s gr gr

% arrowhead
n 5796 3789 m 5643 3983 l 5686 3740 l 5741 3765 l 5796 3789 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
5167 4942 m 5122 4699 l 5276 4893 l 5142 4598 l 5033 4648 l  cp clip
n 5325 5475 m 5475 5475 l 5100 4650 l gs col-1 s gr gr

% arrowhead
n 5167 4942 m 5122 4699 l 5276 4893 l 5222 4918 l 5167 4942 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
6456 3633 m 6357 3859 l 6338 3613 l 6285 3933 l 6403 3952 l  cp clip
n 6600 3300 m 6450 3300 l 6349 3913 l gs col-1 s gr gr

% arrowhead
n 6456 3633 m 6357 3859 l 6338 3613 l 6397 3623 l 6456 3633 l  cp gs 0.00 setgray ef gr  col-1 s
7.500 slw
% Polyline
n 3763 4388 m 3823 4668 l gs col-1 s gr 
% Polyline
n 3828 4388 m 3888 4668 l gs col-1 s gr 
% Polyline
n 3908 4388 m 3968 4668 l gs col-1 s gr 
% Polyline
n 3988 4388 m 4048 4668 l gs col-1 s gr 
% Polyline
n 4058 4388 m 4118 4668 l gs col-1 s gr 
% Polyline
n 4128 4388 m 4188 4668 l gs col-1 s gr 
% Polyline
n 4208 4388 m 4268 4668 l gs col-1 s gr 
% Polyline
n 4283 4388 m 4343 4668 l gs col-1 s gr 
/Times-Roman ff 525.00 scf sf
3000 3825 m
gs 1 -1 sc (socket) col-1 sh gr
/Times-Roman ff 525.00 scf sf
6300 2925 m
gs 1 -1 sc (stop nuts) col-1 sh gr
/Times-Roman ff 525.00 scf sf
6600 3450 m
gs 1 -1 sc (washer) col-1 sh gr
/Times-Roman ff 525.00 scf sf
2700 2100 m
gs 1 -1 sc (attached to endplate) col-1 sh gr
/Times-Roman ff 525.00 scf sf
3000 3300 m
gs 1 -1 sc (ball &) col-1 sh gr
/Times-Roman ff 525.00 scf sf
10200 4650 m
gs 1 -1 sc (alum. post) col-1 sh gr
/Times-Roman ff 525.00 scf sf
9450 3525 m
gs 1 -1 sc (clamp) col-1 sh gr
/Times-Roman ff 525.00 scf sf
2250 5625 m
gs 1 -1 sc (screw adjuster) col-1 sh gr
$F2psEnd
rs
end
